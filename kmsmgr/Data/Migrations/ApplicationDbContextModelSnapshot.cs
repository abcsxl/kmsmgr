// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kmsmgr.Data;

namespace kmsmgr.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("kmsmgr.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreateUserId");

                    b.Property<bool>("IsEnable");

                    b.Property<string>("Manager");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("ParentDepartmentId");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("ParentDepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("kmsmgr.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Icon");

                    b.Property<bool>("IsEnable");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("ParentPermissionId");

                    b.Property<string>("Remarks");

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ParentPermissionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("kmsmgr.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreateUserId");

                    b.Property<bool>("IsEnable");

                    b.Property<string>("Name");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("kmsmgr.Models.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("PermissionId");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("kmsmgr.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreateUserId");

                    b.Property<Guid?>("DepartmentId");

                    b.Property<string>("EMail");

                    b.Property<bool>("IsEnable");

                    b.Property<string>("LastLoginIP");

                    b.Property<DateTime?>("LastLoginTime")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("LoginCount");

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Name");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Remarks");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("kmsmgr.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("kmsmgr.Models.Department", b =>
                {
                    b.HasOne("kmsmgr.Models.User", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("kmsmgr.Models.Department", "ParentDepartment")
                        .WithMany()
                        .HasForeignKey("ParentDepartmentId");
                });

            modelBuilder.Entity("kmsmgr.Models.Permission", b =>
                {
                    b.HasOne("kmsmgr.Models.Permission", "ParentPermission")
                        .WithMany()
                        .HasForeignKey("ParentPermissionId");
                });

            modelBuilder.Entity("kmsmgr.Models.Role", b =>
                {
                    b.HasOne("kmsmgr.Models.User", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");
                });

            modelBuilder.Entity("kmsmgr.Models.RolePermission", b =>
                {
                    b.HasOne("kmsmgr.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("kmsmgr.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("kmsmgr.Models.User", b =>
                {
                    b.HasOne("kmsmgr.Models.User", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId");

                    b.HasOne("kmsmgr.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("kmsmgr.Models.UserRole", b =>
                {
                    b.HasOne("kmsmgr.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("kmsmgr.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
